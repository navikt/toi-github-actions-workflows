on:
  workflow_call:
    inputs:
      app_name:
        required: true
        type: string
      pnpm:
        required: false
        type: boolean
        default: false
      deploy-to-dev-if-branch-name-is:
        required: false
        type: string
      dev-vars-path:
        required: false
        type: string
        description: 'Path to VARS file for NAIS deployment'
        default: ''
      prod-vars-path:
        required: false
        type: string
        description: 'Path to VARS file for NAIS deployment'
        default: ''
      dev-yaml-path:
        required: false
        type: string
        description: 'Path to YAML file for NAIS deployment'
        default: '.nais/app.yaml'
      prod-yaml-path:
        required: false
        type: string
        description: 'Path to YAML file for NAIS deployment'
        default: '.nais/app.yaml'
      nais-alerts-path:
        required: false
        type: string
        description: 'Path to nais alert file'
        default: '.nais/alerts.yaml'
      playwright:
        required: false
        type: boolean
        default: false
      playwright-github-report:
        required: false
        type: boolean
        default: false
jobs:
  build:
    name: 🏗️ Bygg applikasjon
    runs-on: ubuntu-latest
    steps:
      - name: 🔄 Hent Kildekode
        uses: actions/checkout@v4

      - name: 📥 Sett opp pnpm
        if: ${{ inputs.pnpm == true }}
        uses: pnpm/action-setup@v4
        with:
          version: 9.14.2

      - name: 📦 Sett opp Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.14.0'
          registry-url: 'https://npm.pkg.github.com'

      - name: 📥 Installer Avhengigheter med pnpm
        if: ${{ inputs.pnpm == true }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
        run: |
          echo "::group::Installerer pnpm-pakker"
          pnpm install --frozen-lockfile
          echo "::endgroup::"

      - name: 🛠️ Bygg Next applikasjon med pnpm
        if: ${{ inputs.pnpm == true }}
        run: |
          echo "::group::Bygger Next.js applikasjon"
          pnpm run build
          echo "::endgroup::"

      - name: 📥 Installer Avhengigheter med npm
        if: ${{ inputs.pnpm == false }}
        run: |
          echo "::group::Installerer NPM-pakker"
          npm ci
          echo "::endgroup::"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}

      - name: 🛠️ Bygg Next applikasjon med npm
        if: ${{ inputs.pnpm == false }}
        run: |
          echo "::group::Bygger Next.js applikasjon"
          npm run build
          echo "::endgroup::"

      - name: Cache workspace
        if: ${{ inputs.playwright == true }}
        uses: actions/cache/save@v4
        with:
          path: .
          key: workspace-${{ github.sha }}

      - name: 🐳 Last opp Docker-image til GAR
        id: docker-build-push
        uses: nais/docker-build-push@v0
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
        with:
          team: toi
          image_suffix: ${{ inputs.app_name }}
          build_secrets: 'NODE_AUTH_TOKEN=${{ secrets.READER_TOKEN }}'
          tag: ${{ contains(fromJSON('["refs/heads/master", "refs/heads/main"]'), github.ref) && 'latest' || github.sha }}
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}

  call-trivy-security-scan:
    name: 🔒 Security Scan
    needs: build
    uses: navikt/toi-github-actions-workflows/.github/workflows/trivy-security-scan.yaml@v1
    with:
      image: ${{ needs.build.outputs.image }}
    permissions:
      id-token: write
      security-events: write
    secrets: inherit

  deploy-til-dev:
    name: 🚀 Deploy til dev-gcp
    needs:
      - build
    if: contains(fromJSON('["refs/heads/master", "refs/heads/main"]'), github.ref) || github.ref == format('refs/heads/{0}', inputs.deploy-to-dev-if-branch-name-is)
    runs-on: ubuntu-latest
    steps:
      - name: 🔄 Hent Kildekode
        uses: actions/checkout@v4

      - name: 📦 Deploy til Dev
        uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-gcp
          RESOURCE: ${{ inputs.dev-yaml-path }}
          VAR: image=${{ needs.build.outputs.image }}
          VARS: ${{ inputs.dev-vars-path }}

  playwright-tests:
    name: 🎭 Playwright Tests
    needs: [build, deploy-til-dev]
    if: ${{ inputs.playwright == true }}
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      contents: write
      pages: write
      id-token: write
    steps:
      - name: Restore workspace
        uses: actions/cache/restore@v4
        with:
          path: .
          key: workspace-${{ github.sha }}

      - name: 📥 Sett opp pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.14.2

      - name: 📦 Sett opp Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.14.0'
          registry-url: 'https://npm.pkg.github.com'

      - name: Install Playwright Browsers
        run: pnpm exec playwright install chromium

      - name: Start Next.js app
        run: pnpm dev &

      - name: Run Playwright tests
        run: pnpm exec playwright test --reporter=html

      - uses: actions/upload-artifact@v4
        if: ${{ inputs.playwright-github-report == true }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 7

      - name: Setup GitHub Pages
        if: ${{ inputs.playwright-github-report == true }}
        uses: actions/configure-pages@v3

      - name: Deploy Playwright Report to GitHub Pages
        if: ${{ inputs.playwright-github-report == true }}
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: playwright-report
          clean: true
          target-folder: ${{ github.event.repository.name }}
          token: ${{ secrets.GITHUB_TOKEN }}

  deploy-til-prod:
    name: 🚀 Deploy til prod-gcp
    needs:
      - build
      - deploy-til-dev
      - playwright-tests
    if: contains(fromJSON('["refs/heads/master", "refs/heads/main"]'), github.ref) && (inputs.playwright == false || needs.playwright-tests.result == 'success')
    runs-on: ubuntu-latest
    steps:
      - name: 🔄 Hent Kildekode
        uses: actions/checkout@v4

      - name: 📦 Deploy til Prod
        uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: prod-gcp
          RESOURCE: ${{ inputs.prod-yaml-path }},${{ inputs.nais-alerts-path }}
          VAR: image=${{ needs.build.outputs.image }}
          VARS: ${{ inputs.prod-vars-path }}

      - name: 📝 Deployment Oppsummering
        if: success()
        run: |
          echo "## Deployment Fullført! 🎉" >> $GITHUB_STEP_SUMMARY
          echo "* Image: \`${{ needs.build.outputs.image }}\`" >> $GITHUB_STEP_SUMMARY
          echo "* Branch: \`${{ github.ref_name }}\`" >> $GITHUB_STEP_SUMMARY
          echo "* Commit: \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "* Miljø: Produksjon" >> $GITHUB_STEP_SUMMARY

      - name: ⚠️ Deployment Feilet
        if: failure()
        run: |
          echo "## Deployment Feilet ❌" >> $GITHUB_STEP_SUMMARY
          echo "* Image: \`${{ needs.build.outputs.image }}\`" >> $GITHUB_STEP_SUMMARY
          echo "* Branch: \`${{ github.ref_name }}\`" >> $GITHUB_STEP_SUMMARY
          echo "* Miljø: Produksjon" >> $GITHUB_STEP_SUMMARY
          echo "Vennligst sjekk loggene for mer informasjon." >> $GITHUB_STEP_SUMMARY
