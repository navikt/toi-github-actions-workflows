on:
  workflow_call:
    inputs:
      image:
        required: false
        type: string
      category:
        required: false
        type: string
        description: 'Name of the app within a monorepo. Used as a grouping key in the Trivy result. See https://docs.github.com/en/code-security/code-scanning/integrating-with-code-scanning/uploading-a-sarif-file-to-github#uploading-a-code-scanning-analysis-with-github-actions'
jobs:
  trivy-security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Authenticate to access Docker image
        id: login
        uses: nais/login@v0
        with:
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          team: toi

      - run: echo "IMAGE=${{ inputs.image }}" >> $GITHUB_ENV

      - name: 'Defaulting to the tag "latest" of the Docker image to be scanned'
        if: inputs.image == '' && (contains(fromJSON('["refs/heads/master", "refs/heads/main"]'), github.ref))
        run: |
          repo_name="${GITHUB_REPOSITORY/$GITHUB_REPOSITORY_OWNER}" # Remove owner name from repo name
          repo_name="${repo_name#/}" # Remove leading slash if it exists
          repo_name="$(tr '[:upper:]' '[:lower:]' <<< "$repo_name")" # To lower case
          registry="${{ steps.login.outputs.registry }}"
          registry="${registry%/}" # Trim trailing slash if it exists
          IMAGE="${registry}/${repo_name}:latest"
          echo "IMAGE=${IMAGE}" # Print to log
          echo "IMAGE=${IMAGE}" >> $GITHUB_ENV

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        env:
          TRIVY_DB_REPOSITORY: "public.ecr.aws/aquasecurity/trivy-db:latest" # Workaround until this issue is resolved: https://github.com/aquasecurity/trivy-action/issues/389
          TRIVY_JAVA_DB_REPOSITORY: "public.ecr.aws/aquasecurity/trivy-java-db:1" # Workaround until this issue is resolved: https://github.com/aquasecurity/trivy-action/issues/389
        with:
          image-ref: ${{ env.IMAGE }}
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'HIGH,CRITICAL'
          limit-severities-for-sarif: true

      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'
          category: ${{ inputs.category }}
